#!/usr/bin/env ruby
$:.unshift "./lib"
require 'optparse'
require 'parkplace'
require 'stringio'

options = ParkPlace.options
options.seed_host = "127.0.0.1"
options.seed_port = 3003

opts = OptionParser.new do |opts|
    opts.banner = "Usage: parkseed [options] [host] [port]"
    opts.separator "Default host is #{options.seed_host}, default port is #{options.seed_port}."

    opts.separator ""
    opts.separator "Specific options:"

    opts.on("-d", "--directory DIRECTORY",
            "Park Place directory (defaults to #{options.parkplace_dir || 'None'})") do |d|
        options.parkplace_dir = d
    end

    opts.on("-D", "--[no-]daemon",  "Daemon mode") do |d|
        options.daemon = d
    end

    opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
        options.verbose = v
    end

    opts.separator ""
    opts.separator "Common options:"
  
    opts.on_tail("-h", "--help", "Show this message") do
      puts opts
      exit
    end
  
    # Another typical switch to print the version.
    opts.on_tail("--version", "Show version") do
      puts ParkPlace::VERSION
      exit
    end
end

opts.parse! ARGV
options.seed_host = ARGV[0] if ARGV[0]
options.seed_port = ARGV[1].to_i if ARGV[1]
ParkPlace.config(options)

ParkPlace::Models::Base.establish_connection(options.database)
ParkPlace::Models::Base.logger = Logger.new('camping.log') if $DEBUG
ParkPlace.create

server = RubyTorrent::Server.new(options.seed_host, options.seed_port).start
loop do
    ParkPlace::Models::Torrent.find(:all, :include => :bit).each do |trnt|
        mi = RubyTorrent::MetaInfo.from_stream(StringIO.new(trnt.metainfo))
        bit = trnt.bit
        unless server.instance_variable_get("@controllers").has_key? mi.info.sha1
            begin
                puts "SEEDING #{bit.name}"
                server.add_torrent(mi, RubyTorrent::Package.new(mi, bit.fullpath))
            rescue Exception => e
                puts "#{e.class}: #{e.message}"
            end
        end
    end
    sleep 2.minutes
end
